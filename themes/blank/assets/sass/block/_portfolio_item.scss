///
/// An Individual Portfolio item: ../portfolio/the-portfolio-item
///

.article-grid-wrapper {
  @include media('<=tablet') {
      display: block;
    }

  display: grid;
  grid-template-columns: 3fr 1fr;
  grid-template-rows: auto;
  row-gap: 2ex;

  h1 {
    grid-column: 1 / 3;
    grid-row: 1 / 2;
    }

  &__portfolioParent {
    grid-column: 1 / 3;
    grid-row: 2 / 4;
    margin-block-start: 0;

    //
    // section headings
    //
    h3 {
      &:first-child {
        margin-bottom: var(--s0);
      }
    // magic numbers
      // @include responsive-font(1.5vw, 1.6em, 22px, 32px);
      // font-size: var(--s0);
      font-size: ft(var(--s0), var(--s1));
      margin: var(--s1) 0 0;
    }
    .resume-dl {
      max-width: max-content;
    }
    .portfolio__content {
      //
      // uses the same grid styles, but namespaced to differentiate
      //
      section { // utility style:
        max-width: $wide-screen;
      }
      .hero-grid,
      .details-grid {
        display: grid;
      }
      //  Note:
      //  should only be used at the top of each portfolio case study.
      // TODO: explore possible further abstraction / using these values more globally.
      // TODO: explore using scaling values combined w/ calc() to abstract away these fixed pixel values...
      // TODO Explore using flex instead of grid. 

      // hero grid specific variables:
      $hero-rows-phone: #{minmax(225px, auto) minmax(150px, auto)};
      $hero-rows-tablet: #{minmax(475px, auto) minmax(150px, auto)};
      $hero-columns: #{var(--s1) 1fr var(--s1) 1fr var(--s1)};
      $hc: 2fr 1fr;
      //

      .hero-grid {
        @include portfolio-grid('>=phone', $hc, $hero-rows-phone);
        @include portfolio-grid('>=tablet', $hc, $hero-rows-tablet);

        img {
          object-fit: cover;
          width: 100%;
        }

        &__imageBlock {
          margin-left: calc(var(--s0) * -1);
          margin-right: calc(var(--s0) * -1);
          margin-inline-end: calc(var(--s0) * -1);
          margin-inline-start: calc(var(--s0) * -1);
          @include add-to-grid('>=phone', 1, -1, 1, 2);
          @include add-to-grid('>=tablet', 1, -1, 1, -1); 
        }

        &__copyBlock {
          @include add-to-grid('>=phone', 1, 6, 2, 3);
          @include add-to-grid('>=tablet', 1, -2, 2, 3);
          @include responsive-font(1.8vw, 18px, 32px, 20px);
          background-color: transparentize($site-black, 0.03);
          // margin-inline-end: var(--s1);
          padding: var(--s1);
          z-index: 1;
        }
      } 
  // /.hero-grid

      //
      // Each lower section wrapper call gets this class
      // details-grid for secondary and tertiary content layouts
      // details grid specific variables:
      $details-grid-columns: #{1fr 6.5vw 1fr 2.5vw};
      $details-grid-rows: #{minmax(4vh, auto) auto};
      $row-gap: var(--s-1);
      //

      .details-grid {
        @include portfolio-grid('>=phone', $details-grid-columns, $details-grid-rows, $row-gap);
        align-items: start;
        margin-top: var(--s1);
        
        //! Quick and Dirty needs refactoring !
        > a {
          @include add-to-grid('>=phone', -2, -5, auto, auto);
          @include add-to-grid('>=tablet', -2, -4, auto, auto);
          justify-self: end;
        }

        > p {
          // margin: var(--s0) 0;
          margin-block: var(--s1);
        }

        // TODO this section needs to be refactored, but for now it can stand...

        > h2 {
          margin-block: 0;
        }
        
        > h2 + h3 {
          margin-block-start: var(--s0);
        }

        > h4 {
          margin-block-end: 0;
        }

        > h3 + p,
          h4 + p {
          margin-block-start: 0;
        }
        // TODO see above â¬†

        .vertical-center {
            align-self: center;
          }
        
        // Section with Heading (H4), Image and text
        // <h4> section / block heading
        // Uses flex and grid together
        //

        &__flex-section {
          //! Not ready for prime time.
          // need styles to allow for a more traditional header / content relationship. 
          // TODO: keep working this out
          > .heading {
            @include add-to-grid('>=phone', 1, -1, 1, 2);
            @include add-to-grid('>=tablet', 1, 2, 1, 2);
          }
        }

        & > .heading {
            @include add-to-grid('>=phone', 1, -1, auto, auto);
            @include add-to-grid('>=tablet', 1, 3, auto, auto);
          }

        & > .heading.right {
            @include add-to-grid('>=phone', 1, -1, 1, 2);
            @include add-to-grid('>=tablet', 3, 4, 1, 2);
          }
        
        & > .heading.left {
            @include add-to-grid('>=phone', 1, -1, 1, 2);
            @include add-to-grid('>=tablet', 3, 4, 1, 2);
          }

        //
        // twoByTwo: this layout can be used to stack 3 images to the right or left
        // with a copy block on the opposite side..
        &__twoByTwo {

          // &.copy-block {

          // }
          &.image-block,
          &.copy-block {
            &__left {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 1, 2, 1, -1);
            }

            &__right {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 3, 4, 1, -1);
            }

            &__center {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              justify-self: center
              // padding: var(--s1);
              // padding-block-end: var(--s1);
              // padding-block-start: var(--s1);
              // padding-inline-end: var(--s1);
              // padding-inline-start: var(--s1);
            }
          }
          &.image-block {
            &__left,
            &__right {
              @include grid-figcaption;
            }
          }
        } // /twoByTwo

//
// Twenty Words
//
        &__twentyWords {
          img, video {
            margin-block: var(--s0);
          }

          video {
            width: 100%;
          }

          &.image-block {
            &__left {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 1, 2, auto, auto);
            }

            &__right {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 3, 4, auto, auto);
            }
          }

          &.copy-block {
            &__left {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 1, 2, auto, auto);
              // padding: 0 0 3ex 3ex;
            }

            &__right {
              @include add-to-grid('>=phone', 1, -1, auto, auto);
              @include add-to-grid('>=tablet', 3, 4, auto, auto);
              // margin: 3ex 0 5ex;
            }
          }
          @include grid-figcaption;
        }

//
// Fifty Words
// 

        &__fiftyWords {

          video {
            width: 100%;
          }

          &.figma-embed {
            background-color: red;
            width: 1244px;
            height: 804px;
          }
          

          &.big-image {
            @include add-to-grid('>=phone', 1, -1, auto, auto);
            @include add-to-grid('>=tablet', 1, -2, auto, auto);
            @include grid-figcaption;
          }

          &.small-image,
          &.small-image-left {
            @include add-to-grid('>=phone', 1, -1, auto, auto);
            @include add-to-grid('>=tablet', 1, 2, auto, auto);
            @include grid-figcaption;
          }

          &.small-image-right {
            @include add-to-grid('>=phone', 1, -1, auto, auto);
            @include add-to-grid('>=tablet', 3, 4, auto, auto);
            @include grid-figcaption;
          }

          &.copy-block {
            @include add-to-grid('>=phone', 1, 5, auto, auto);
            @include add-to-grid('>=tablet', 3, 4, auto, auto);
          }
        }

        &__sectionHeading {
          @include add-to-grid('>=phone', 1, 6, auto, auto);
          background-color: $site-hot-orange;
        }
      } // /details-grid
    }
  }
} // /article-grid-wrapper
