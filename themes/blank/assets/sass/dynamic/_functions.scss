//
// Fun with functions:
// Also general mixins here too!
//

//
// Functions aqui
//

//
// import using @use the grids
//
// TODO: Do someting about this...
@import 'dynamic/portfolio_grids';

// Very Basic Text Shadow Mixin:
@mixin basic-drop-shadow($type: text) {
  @if $type == text {
    text-shadow: 2px 2px 2px $site-black;
  } @else if $type == box {
    box-shadow: 2px 2px 2px $site-black;
  } @else if $type == svg {
    filter: drop-shadow(1px 1px 1px $site-black);
  }
}

// Mixins
// mixin for basic padding
// todo: add {params}
// param {$media} : >=phone
// param {$padding} $pl/$pr = padding-right left etc...
// $mw = max width
// $pl = padding left
// $pr = padding right
@mixin basic-article-wrapper($breakpoint, $mw: "", $pl: #{initial}, $pr: #{initial}) {
  @include media(#{$breakpoint}) {
    max-width: $mw;
    padding-left: $pl;
    padding-right: $pr;
  }
}

@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap; 
}

// In some cases we might want to vary the kind of focus ring we apply,
// @Param
//

@mixin focus-ring(
  $type: outline, 
  $kind: solid, 
  $color: $site-focus-ring, 
  $size: #{var(--s-4)}) {
  @if $type == 'outline' {
    outline-color: $color;
    outline-style: $kind;
    outline-width: $size;
  } @else if $type == 'border' {
    border: $kind $color $size  ;
  } @else if $type == 'box-shadow' {
    box-shadow: inset 0 0 0 $size $color;
  }
}


// TODO: Determine where this is being used and if its not, get rid of it... 6/16/23
//
// SVG Overlay mixin for the home page
//

@keyframes simpleFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes slideDownMedium {
  0% {
    opacity: 0;
    transform: translateY(-50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideDownLarge {
  
  0% {
    --y: -200px;
    opacity: 0;
    transform: translateY(var(--y));
  }
  100% {
    --y: 0%;
    opacity: 1;
    transform: translateY(var(--y));
  }
}

@mixin slide-up-down(
  $animation-name: slideDownMedium,
  $duration: 550ms,
  $direction: normal,
  $delay: 175ms,
  $iteration-count: 1,
  $timing-function: ease-out,
  $fill-mode: both
) {
  animation: $animation-name;
  animation-duration: $duration;
  animation-direction: $direction;
  animation-delay: $delay;
  animation-iteration-count: $iteration-count;
  animation-timing-function: ease-out;
  animation-fill-mode: $fill-mode;
}

