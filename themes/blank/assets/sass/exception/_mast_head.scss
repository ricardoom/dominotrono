//
// Masthead class on the homepage
// TODO: refactor this. Mostly naming conventions and combining reused grid configurations

.mast-container {
  container-name: mast-container;
  container-type: inline-size;
  background-image: conic-gradient(from -.5turn at bottom right, $site-dark-blue, $cool-sky-blue, $site-purple);

  @include media('>=tablet') {
    --h: calc(100vh - var(--s8));
    display: grid;
    grid-template-columns: [col-prime] 2fr [col-segundo] 1fr [col-end];
    grid-template-rows: [row-prime] 2fr [row-segundo] 1fr [row-end];
    height: calc(100vh - var(--h));
    // TODO: find a better way to keep the content from overflowing...
    overflow: hidden;
  }  
}


.svg-filter {
  fill: transparent;
  filter: url(#gggrain-filter);
  height: 100%;
  mix-blend-mode: soft-light;
  opacity: 1;
  width: 100%;
}

.quad-3 {
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
  grid-column: col-prime / col-segundo;
  grid-row: row-segundo / row-end;
  
  > img  {
    aspect-ratio: 21/9;
    grid-column: col-prime / col-segundo;
    grid-row: row-segundo / row-end;
    height: 100%;
    object-fit: cover;
  }

  > .overlay {
    filter: opacity(0.5);
    height: 100%;
    width: 100%;
    grid-column: col-prime / col-segundo;
    grid-row: row-segundo / row-end;
  }
}

.quad-4  {
  display: grid;
  place-content: center;
  grid-template: max-content / max-content;
  grid-column: col-segundo / col-end;
  grid-row: row-segundo / row-end;
  height: 100%;
  width: 100%;

  > img,
  .secondary-graphic { 
    grid-column: 1 / -1;
    grid-row: 1 / -1;    
    };

  .secondary-graphic {
    filter: opacity(0.85);
    transform: translate(calc(var(--s2) * -1),calc(var(--s1) * -1));
    }
  }

.mast-img-contain {
  display: grid;
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
  grid-column: col-prime / col-segundo;
  grid-row: row-prime / row-segundo;
  background-color: hsla(294, 100%, 50%, 0.204);
  
  > .mast-img {
    grid-column: col-prime / col-segundo;
    grid-row: row-prime / row-segundo;
    height: 100%;
    object-fit: cover;
    width: 100%;
  }

  > .mast-overlay {
    filter: opacity(0.5);
    height: 100%;
    width: 100%;
    grid-column: col-prime / col-segundo;
    grid-row: row-prime / row-segundo;
  }
}

// * MARK: Mast Head Text
.mast-head-text {
  background-color: transparentize($site-white, 0.2);
  color: var(--text-color);
  
  grid-column: col-segundo / col-end;
  grid-row: row-prime / row-segundo;
  margin-inline: unset;
  
  > div {
    display: flex;
    justify-content: center;
    
    // @include media('<=tablet') {
  // * MARK: Container Query
    @container mast-container (width > 767px) {
      padding-block: var(--s0);
      padding-inline: var(--s0);
     }
  }

  p {
    --measure: 50ch;
    font-size: ft(var(--s0), var(--s1));
    line-height: 1.3;
    text-wrap: balance;
    // width: var(--measure);
  }
// * MARK: ::first-letter
  p::first-letter {
// * MARK: Container Query
    @container mast-container (width > 767px) {
      font-size: var(--s5);
    }
    --wght: 700;
    // font-size: ft(var(--s3), var(--s5));
    float: left;
    font-size: var(--s3);
    font-weight: var(--wght);
    line-height: 0.8;
  }

  
}
