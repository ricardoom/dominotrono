//
// This partial is for the home page features section
//

.features {
  background: linear-gradient(to bottom, $gradient-features);
  color: $site-dark-blue;
  padding: 0;
  @include media('>=tablet') {
    margin: 0;
    margin-block: 0;
  }
}

.wrapper:has(.feature) {
  margin: 0;
  padding: 0;
}

.feature {

  section {
    // @include media ('<=tablet') {
    //   max-width: 100%;
    //   padding-block-start: var(--s2);
    // }

    display: flex;
    gap: var(--s0);
    max-width: 100%;
      
    div {
      width: 66%;
    }
    
    svg,
    img  {
      aspect-ratio: 2/3;
      background-color: $site-lilac;
      display: block;
      width: 33%;
    }

    a {
      color: $site-prince-purple;
      padding: var(--s0);
      width: max-content;
    }
    
    a:hover {
      color: currentColor;
      outline-color: currentColor;
    }
  }


  // section:last-child {
  //   margin-bottom: var(--s3);
  //   margin-block-end: var(--s3);
  // }

  section:nth-child(even) {
    align-self: flex-start;
    flex-direction: row-reverse;

    div {
      padding-inline-start: var(--s0);
    }
    // margin-left: var(--s1);
    // margin-inline-start: var(--s1);
    // a {
    //   h1 {
    //     grid-area: 1 / 2 / 2 / -1;
    //   }

    //   p {
    //     grid-area: 2 / 2 / -2 / -1;
    //   }

    //   svg {
    //     grid-area: 1 / 1 / -2 / -2;
    //   }
    // }
  }

  section:nth-child(odd) {
    align-self: flex-end;
    // margin-right: var(--s1);
    // margin-inline-end: var(--s1);

    // a {
    //   h1 {
    //     grid-area: 1 / 1 / 2 / -1;
    //   }

    //   p {
    //     grid-area: 2 / 1 / -2 / -1;
    //   }

    //   svg {
    //     grid-area: 1 / 2 / -2 / -1;
    //   }
    // }
  }

  div {
    align-content: center;
    display: flex;
    flex-direction: column;
    gap: var(--s1);
    justify-content: center;
    // grid-template-columns: repeat(3, 1fr);
    // grid-template-rows: repeat(3, max-content);
    padding-block: var(--s1);
    padding-inline: var(--s1);
    transition: filter 200ms ease-in;
    text-decoration: none;

    &:hover,
    &:visited {
      color: currentColor;
    }

    h1 {
      --wght: 573;
      // align-self: end;
      font-size: ft(var(--s2), var(--s4));
      font-weight: var(--wght);
      line-height: 1;
      margin-bottom: 0;
      margin-block-end: 0;
    }

    p {
      --line-height: 1.3;
      font-size: ft(var(--s0), var(--s1));
      line-height: var(--line-height);
      width: fit-content;
    }

    

    svg {
      @include media('<=tablet') {
        min-block-size: calc(var(--s6) * .75);  
      }
      height: auto;
      min-block-size: calc(var(--s6) * 1.5);
      width: 100%;
      z-index: -100;
    }
  }

  .pivot {
    // @include media('<=tablet') {
    //   padding-inline: var(--s0);
    //   }

    // border-radius: var(--s0);
    // color: currentColor;
    filter: none;
    // padding-inline: var(--s2);
    transform: scale(1);
    transition: filter 300ms ease-out, transform 310ms ease-out;
    will-change: transform, transition;
    
    
    span {
      grid-column: 1 / -1;
    }

    @include media('<=tablet') {
      // background-color: transparentize($color: $site-white, $amount: 0.45);
      span {
        font-size: ft(var(--s-1), var(--s0));
      }
    }

    // @include media('>=tablet') {
    //   &:hover,
    //   &:focus {
    //     background-color: transparentize($color: $site-white, $amount: 0.45);
    //   }
    // }
    

    &:focus {
      @include focus-ring(outline, solid, var(--hover-color), var(--s-2));
    }
  }

  .card-state {
    $angles: 25;
    --string: 'px';
    --perspective: #{$angles};
    color: currentColor;
    filter: blur(var(--s-4)) opacity(0.8);
    transform: scale(0.85);
    will-change: transform;
  }
}
