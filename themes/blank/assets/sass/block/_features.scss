//
// This partial is for the home page features section
//

.features {
  background: linear-gradient(to bottom, $gradient-features);
  margin: 0;
  margin-block: 0;
  padding-top: var(--s2);
  padding-block: var(--s2);
}

.feature {
  color: $site-dark-blue;

  section {
    @media screen and (max-width: $small-screen ) {
      max-width: 100%;
      }

    max-width: 60%;
    }

  section:last-child {
    margin-bottom: var(--s3);
    margin-block-end: var(--s3);
  }

  section:nth-child(even) {
    align-self: flex-start;
    margin-left: var(--s1);
    margin-inline-start: var(--s1);
    a {

      h1 {
        // align-self: end;
        grid-area: 1 / 2 / 2 / -1;
      }

      p {
        grid-area: 2 / 2 / -2 / -1;
      }

      svg {
        grid-area: 1 / 1 / -2 / -2;
      }
    }
  }

  section:nth-child(odd) {
    align-self: flex-end;
    margin-right: var(--s1);
    margin-inline-end: var(--s1);

    a {

      h1 {
        grid-area: 1 / 1 / 2 / -1;
      }

      p {
        grid-area: 2 / 1 / -2 / -1;
      }

      svg {
        grid-area: 1 / 2 / -2 / -1;
      }
    }
  }

    a {
    display: grid;
    grid-template-columns: repeat(3, 1fr) ;
    grid-template-rows: repeat(3, auto);
    transition: filter 200ms ease-in;
    text-decoration: none;  

    &:hover,
    &:visited {
     color: currentColor;
    }

    h1 {
      align-self: end;
      font-size: clamp(var(--s1), $preferredValue, var(--s3));
      font-weight: 674;
      line-height: 1;
      margin-bottom: 0;
      margin-block-end: 0;
    }

    p {
      --line-height: 1.2;
      font-size: clamp(var(--s05), $preferredValue, var(--s1));
      line-height: var(--line-height);
      width: 65%;
    }

    svg {
      filter: drop-shadow(var(--s1) var(--s1) var(--s3) transparentize($site-dark-blue, 0.35));
      z-index: -100;
    }
  }
  .pivot {
     color: currentColor;
     filter: unset;
     transform: scale(1);
     transition: filter 300ms ease-out, transform 310ms ease-out;
  }

  .card-state {
    $angles: 25;
    --string: 'px';
    --perspective: #{$angles};
    filter: blur(var(--s-4)) opacity(0.8);
    transform: scale(0.85);
    // perspective: 45px;
    // perspective-origin: right;
  }
}
